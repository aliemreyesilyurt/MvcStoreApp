@model OrderDto

<form asp-action="Checkout" method="post">
    @if(ViewData.ModelState.ContainsKey("Error") && ViewData.ModelState["Error"]?.Errors.Count() > 0)
    {
        <div class="text-danger">
            @foreach (var error in ViewData.ModelState["Error"].Errors)
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }

    <div class="form-group my-3">
        <label asp-for="Fullname"></label>
        <input asp-for="Fullname" class="form-control
        @(ViewData.ModelState["Fullname"]?.Errors.Any() == true ? "is-invalid" : "")" />
        <span asp-validation-for="Fullname" class="text-danger"></span>
    </div>

    <div class="form-group my-3">
        <label asp-for="Line1"></label>
        <input asp-for="Line1" class="form-control
        @(ViewData.ModelState["Line1"]?.Errors.Any() == true ? "is-invalid" : "")" />
        <span asp-validation-for="Line1" class="text-danger"></span>
    </div>

    <div class="form-group my-3">
        <label asp-for="Line2"></label>
        <input asp-for="Line2" class="form-control" />
    </div>

    <div class="form-group my-3">
        <label asp-for="Line3"></label>
        <input asp-for="Line3" class="form-control" />
    </div>

    <div class="form-group my-3">
        <label asp-for="City"></label>
        <input asp-for="City" class="form-control
        @(ViewData.ModelState["City"]?.Errors.Any() == true ? "is-invalid" : "")" />
        <span asp-validation-for="City" class="text-danger"></span>
    </div>

    <div class="form-group my-3">
        <input asp-for="GiftWrap" />
        <label>Gift wrap these items.</label>
    </div>

    <div class="text-center">
        <div class="form-group my-3">
            <button asp-controller="Home" asp-action="Index" class="btn btn-primary">Homepage</button>
            <button type="submit" class="btn btn-primary">Complete Order</button>
        </div>
    </div>
</form>